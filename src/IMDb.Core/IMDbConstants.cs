using System;
using System.Collections.Generic;
using CluedIn.Core.Net.Mail;
using CluedIn.Core.Providers;

namespace CluedIn.Crawling.IMDb.Core
{
    public class IMDbConstants
    {
        public const string CrawlerDescription = "IMDb";
        public const string Instructions = "";
        public const IntegrationType Type = IntegrationType.Cloud;
        public const string Uri = "https://imdb.com"; //Uri of remote tool if applicable
        
        public const string IconResourceName = "Resources.imdb.png";
        public const string Category = "";
        public const string Details = "";

        public static IList<string> ServiceType = new List<string> {""};
        public static IList<string> Aliases = new List<string> {""};

        public static AuthMethods AuthMethods = new AuthMethods();

        public struct EntityTypes
        {
            public const string Title = "/IMDb/Title";
            public const string TitleAKA = "/IMDb/Title/AKA";
        }

        public struct EntityEdgeTypes
        {
            public const string AKA = "/AKA";
        }

        #region Autogenerated constants

        public const string CodeOrigin = "IMDb";
        public const string ProviderRootCodeValue = "IMDb";
        public const string CrawlerName = "IMDbCrawler";
        public const string CrawlerComponentName = "IMDbCrawler";
        public static readonly Guid ProviderId = Guid.Parse("331f7384-c4ff-4a12-a6e6-842e4d199da3");
        public const string ProviderName = "IMDb";


        public static readonly ComponentEmailDetails ComponentEmailDetails = new ComponentEmailDetails
        {
            Features = new Dictionary<string, string>(),
            Icon = ProviderIconFactory.CreateConnectorUri(ProviderId),
            ProviderName = ProviderName,
            ProviderId = ProviderId,
        };

        public static IProviderMetadata CreateProviderMetadata()
        {
            return new ProviderMetadata
            {
                Id = ProviderId,
                ComponentName = CrawlerName,
                Name = ProviderName,
                Type = Type.ToString(),
                ComponentEmailDetails = ComponentEmailDetails
            };
        }

        #endregion
    }
}
